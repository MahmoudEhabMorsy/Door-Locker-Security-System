/*
 * main.c
 *
 *  Created on: 28 Oct 2022
 *      Author: EGYPT
 */

#include"MC1.h"


int main(void) {
	SREG |= (1 << 7);

	UART_ConfigType UART_config = { EIGHT_BIT, EVEN, ONE_BIT, UART_BAUDRATE };
	LCD_init();
	UART_init(&UART_config);
	Timer1_ConfigType Timer1_config = { TIMER1_INITIAL_VALUE, TIMER1_OCRA_VALUE,
			F_CPU_256, COMPARE_OCR };
	Timer1_init(&Timer1_config);
	Timer1_setCallBack(secondPassed);
	/*Create System Password*/
	createPassword();
	while (1) {
		status = mainOptionsMenu();
		_delay_ms(500);
		if (status == '+') {
			openDoorOption();
		} else if (status == '-') {
			changePasswordOption();
			if (g_flag_change_pass == 1) {
				g_flag_change_pass = 0;
				createPassword();
			}
		}
	}
}







void createPassword(void) {
	while (1) {
		LCD_clearScreen();
		LCD_displayString("Plz Enter Pass:");
		LCD_moveCursor(1, 0);
		for (i = 0; i < PASSWORD_LENGTH; i++) {
			key[i] = KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(500);
		}
		while (KEYPAD_getPressedKey() != enter)
			;
		_delay_ms(500);
		UART_sendByte(getready);
		while (UART_recieveByte() != ready)
			;
		sendPassword(key);
		while (UART_recieveByte() != done)
			;
		LCD_clearScreen();
		LCD_displayString("Plz re-Enter the");
		LCD_displayStringRowColumn(1, 0, "same Pass: ");
		LCD_moveCursor(1, 10);
		for (i = 0; i < PASSWORD_LENGTH; i++) {
			key[i] = KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(500);
		}
		while (KEYPAD_getPressedKey() != enter)
			;
		_delay_ms(500);
		UART_sendByte(getready);
		while (UART_recieveByte() != ready)
			;
		sendPassword(key);
		while (UART_recieveByte() != done)
			;
		if (UART_recieveByte() != MATCHED) {
			/*send pass to control_mcu*/
			LCD_clearScreen();
			LCD_displayString("The 2 Passwords ");
			LCD_displayStringRowColumn(1, 0, "arenot the same");
			wait(ONE_SECOND_DELAY);
			continue;
		} else {
			break;
		}
	}
}
uint8 mainOptionsMenu(void) {
	LCD_clearScreen();
	LCD_displayString("+ : Open Door");
	LCD_displayStringRowColumn(1, 0, "- : Change Pass");
	return (KEYPAD_getPressedKey());
}

void openDoorOption(void) {
	while (1) {
		UART_sendByte('+');
		LCD_clearScreen();
		LCD_displayString("Plz Enter Pass:");
		LCD_moveCursor(1, 0);
		for (i = 0; i < PASSWORD_LENGTH; i++) {
			key[i] = KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(500);
		}
		while (KEYPAD_getPressedKey() != enter)
			;
		_delay_ms(500);
		UART_sendByte(getready);
		while (UART_recieveByte() != ready)
			;
		sendPassword(key);
		while (UART_recieveByte() != done)
			;
		/*if the two passwords are matched*/
		status = UART_recieveByte();
		if (status == MATCHED) {
			counter = 0;
			UART_sendByte(UNLOCK);
			LCD_clearScreen();
			LCD_displayString("Door Unlocking");
			waitWithTimer(TIME_OF_UNLOCKING);

			LCD_clearScreen();
			LCD_displayString("Door Unlocked   ");
			waitWithTimer(TIME_HOLDING_THE_MOTOR);

			LCD_clearScreen();
			LCD_displayString("Door Locking   ");
			waitWithTimer(TIME_OF_LOCKING);

			LCD_clearScreen();
			LCD_displayString("Door Locked    ");
			wait(ONE_SECOND_DELAY);
			break;
		} else if (status == UNMATCHED) {
			counter++;
			if (counter == 3) {
				counter = 0;
				UART_sendByte(WARNING);
				LCD_clearScreen();
				LCD_displayString("System Locked");
				waitWithTimer(TIME_SYSTEM_IS_LOCKED);
				UART_sendByte(UNLOCK);
				break;
			} else {
				UART_sendByte(CONTINUE);
				continue;
			}
		}
	}
}
void changePasswordOption(void) {
	while (1) {
		UART_sendByte('-');
		LCD_clearScreen();
		LCD_displayString("Plz Enter Pass:");
		LCD_moveCursor(1, 0);
		for (i = 0; i < PASSWORD_LENGTH; i++) {
			key[i] = KEYPAD_getPressedKey();
			LCD_displayCharacter('*');
			_delay_ms(500);
		}
		while (KEYPAD_getPressedKey() != enter)
			;
		_delay_ms(500);
		UART_sendByte(getready);
		while (UART_recieveByte() != ready)
			;
		sendPassword(key);
		while (UART_recieveByte() != done)
			;
		status = UART_recieveByte();
		if (status == MATCHED) {
			counter = 0;
			g_flag_change_pass = 1;
			break;
		} else if (status == UNMATCHED) {
			counter++;
			if (counter == 3) {
				counter = 0;
				UART_sendByte(WARNING);
				LCD_clearScreen();
				LCD_displayString("System Locked");
				waitWithTimer(TIME_SYSTEM_IS_LOCKED);
				UART_sendByte(UNLOCK);
				break;
			} else {
				continue;
			}
		}
	}
}
void sendPassword(uint8 *pass) {
	for (i = 0; i < PASSWORD_LENGTH; i++) {
		UART_sendByte(pass[i]);
	}
}
void secondPassed(void) {
	g_second++;
}
void wait(uint16 time) {
	g_second = 0;
	while (g_second < time)
		;

}
void waitWithTimer(uint16 time) {
	g_second = 0;
	while (g_second < time) {
		LCD_moveCursor(1, 0);
		LCD_intgerToString(time - g_second);
		if ((time - g_second) < 10) {
			LCD_displayString(" ");
		}
	}
}
