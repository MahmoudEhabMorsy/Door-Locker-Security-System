/*
 * main.c
 *
 *  Created on: 28 Oct 2022
 *      Author: EGYPT
 */
#include"keypad.h"
#include"lcd.h"
#include"uart.h"
#include"timer1.h"
#include"MC1.h"
#include<avr/io.h>
#include<util/delay.h>
uint8 i, status, counter = 0;
uint8 key[5]={};
uint16 g_second = 0;
int main(void) {
	SREG|=(1<<7);
	uint8 flag_change_pass = 0;
	UART_ConfigType UART_config = { EIGHT_BIT, EVEN, ONE_BIT, 9600 };
	LCD_init();
	UART_init(&UART_config);
	Timer1_ConfigType Timer1_config = { 0, 7813, F_CPU_1024, COMPARE_OCR };
	Timer1_init(&Timer1_config);
	Timer1_setCallBack(secondPassed);

	while (1) {
		/*Create System Password*/
		createPassword();
		if (UART_recieveByte() != MATCHED) {
			/*send pass to control_mcu*/
			LCD_clearScreen();
			LCD_displayString("The 2 Passwords arenot the same");
			wait(ONE_SECOND_DELAY);
			continue;
		}
		while (1) {
			if (flag_change_pass == 1) {
				flag_change_pass = 0;
				break;
			}
			status = mainOptionsMenu();
			if (status == '+') {
				while (1) {
					UART_sendByte('+');
					LCD_clearScreen();
					LCD_displayString("Plz Enter Pass:");
					LCD_moveCursor(1, 0);
					for (i = 0; i < PASSWORD_LENGTH; i++) {
						key[i] = KEYPAD_getPressedKey();
						LCD_displayCharacter('*');
						_delay_ms(3000);
					}
					while (KEYPAD_getPressedKey() != enter)
						;
					_delay_ms(3000);
					UART_sendByte(getready);
					while (UART_recieveByte() != ready)
						;
					sendPassword(key);
					while (UART_recieveByte() != done)
						;
					/*if the two passwords are matched*/
					while ((UART_recieveByte() != MATCHED)
							|| (UART_recieveByte() != UNMATCHED))
						;
					if (UART_recieveByte() == MATCHED) {
						counter = 0;
						UART_sendByte(UNLOCK);
						LCD_clearScreen();
						LCD_displayString("Door is Unlocking");
						wait(TIME_OF_UNLOCKING);
						LCD_displayString("Door is Unlocked  ");
						wait(TIME_HOLDING_THE_MOTOR);
						UART_sendByte(LOCK);
						LCD_clearScreen();
						LCD_displayString("Door is Locking");
						wait(TIME_OF_LOCKING);
						LCD_displayString("Door is Locked    ");
						break;
					} else {
						counter++;
						if (counter == 3) {
							counter = 0;
							UART_sendByte(WARNING);
							LCD_clearScreen();
							LCD_displayString("System Locked for 1 minute");
							wait(TIME_SYSTEM_IS_LOCKED);
							break;
						} else {
							UART_sendByte(CONTINUE);
							continue;
						}
					}
				}
			} else if (status == '-') {
				while (1) {
					UART_sendByte('-');
					LCD_clearScreen();
					LCD_displayString("Plz Enter Pass:");
					LCD_moveCursor(1, 0);
					for (i = 0; i < PASSWORD_LENGTH; i++) {
						key[i] = KEYPAD_getPressedKey();
						LCD_displayCharacter('*');
						_delay_ms(3000);
					}
					while (KEYPAD_getPressedKey() != enter)
						;
					_delay_ms(3000);
					UART_sendByte(getready);
					while (UART_recieveByte() != ready)
						;
					sendPassword(key);
					while (UART_recieveByte() != done)
						;
					if (UART_recieveByte() == MATCHED) {
						counter = 0;
						flag_change_pass = 1;
						break;
					} else {
						counter++;
						if (counter == 3) {
							counter = 0;
							UART_sendByte(WARNING);
							LCD_clearScreen();
							LCD_displayString("System Locked for 1 minute");
							wait(TIME_SYSTEM_IS_LOCKED);
							break;
						} else {
							continue;
						}
					}
				}
			}
		}
	}
}

void createPassword(void) {
	LCD_clearScreen();
	LCD_displayString("Plz Enter Pass:");
	LCD_moveCursor(1, 0);
	for (i = 0; i < PASSWORD_LENGTH; i++) {
		key[i] = KEYPAD_getPressedKey();
		LCD_displayCharacter('*');
		g_second=0;
		while(g_second<3);
	}
	while(KEYPAD_getPressedKey() != enter);
	_delay_ms(3000);
	UART_sendByte(getready);
	while (UART_recieveByte() != ready)
		;
	sendPassword(key);
	while (UART_recieveByte() != done)
		;
	LCD_clearScreen();
	LCD_displayString("Plz re-Enter the same Pass: ");
	LCD_moveCursor(1, 0);
	for (i = 0; i < PASSWORD_LENGTH; i++) {
		key[i] = KEYPAD_getPressedKey();
		LCD_displayCharacter('*');
		_delay_ms(3000);
	}
	while (KEYPAD_getPressedKey() != enter)
		;
	_delay_ms(3000);
	UART_sendByte(getready);
	while (UART_recieveByte() != ready)
		;
	sendPassword(key);
	while (UART_recieveByte() != done)
		;

}
uint8 mainOptionsMenu(void) {
	LCD_clearScreen();
	LCD_displayString("+ : Open Door");
	LCD_displayStringRowColumn(1, 0, "- : Change Pass");
	return (KEYPAD_getPressedKey());
}

void sendPassword(uint8 *pass) {
	for (i = 0; i < PASSWORD_LENGTH; i++) {
		UART_sendByte(pass[i]);
	}
}
void secondPassed(void) {
	g_second++;
}
void wait(uint16 time) {
	g_second = 0;
	while (g_second<time);

}
